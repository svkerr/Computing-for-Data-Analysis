file <- 100
path <- paste(dir, filename, sep = "/")
data <- read.csv(path)
path
head(data)
tail(data)
str(data)
m
rm(m)
ls()
file <- 21
path <- paste(dir, filename, sep = "/")
data <- read.csv(path)
path
file
dir <- "specdata"
file <- 21
filename <- paste(sprintf("%03.f",file), "csv", sep = ".")
path <- paste(dir, filename, sep = "/")
data <- read.csv(path)
filename
head(data)
tail(data)
directory <- "specdata"
id <- 21
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
path
head(data)
summary(data)
getmonitor <- function(id, directory, summarize = FALSE){
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
}
getmonitor(2, "specdata",)
filename
clear(id)
rm(id)
rm(filename)
rm(path)
rm(data)
getmonitor <- function(id, directory, summarize = FALSE){
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
}
getmonitor(3, "specdata")
head(data)
getmonitor <- function(id, directory, summarize = FALSE){
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
head(data)
}
getmonitor(1, specdata)
getmonitor(1, "specdata")
getmonitor <- function(id, directory, summarize = FALSE){
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
if(summarize == TRUE){
print(summary(data))
}
head(data)
}
getmonitor(1, "specdata", TRUE)
getmonitor <- function(id, directory, summarize = FALSE){
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
if(summarize == TRUE){
print(summary(data))
}
}
getmonitor(21, "specdata", TRUE)
getmonitor(101, "specdata", TRUE)
head(data)
data
a <- "200"
class(a)
b <- 2
class(b)
is.character(a)
if (is.character(a)){}
if (is.character(a)){}
if (is.character(a)){}
a <- "200"
if (is.character(a)) a <- as.numeric(a)
class(a)
a
getmonitor <- function(id, directory, summarize = FALSE){
if (is.character(id)) id <- as.numeric(id)
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
if(summarize == TRUE){
print(summary(data))
}
}
getmonitor("200", "specdata", TRUE)
head(data)
getmonitor("205", "specdata", TRUE)
getmonitor("205", "specdata")
head(data)
class(data)
getmonitor <- function(id, directory, summarize = FALSE){
if (is.character(id)) id <- as.numeric(id)
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
data <- read.csv(path)
print(class(data))
if(summarize == TRUE){
print(summary(data))
}
}
getmonitor("205", "specdata")
data <- getmonitor("205", "specdata")
data1 <- getmonitor("205", "specdata")
head(data1)
getmonitor(2,"specdata", TRUE)
getmonitor("3","specdata", TRUE)
blah <- getmonitor("3","specdata", TRUE)
head(blah)
blah <- getmonitor("3","specdata")
head(blah)
class(blah)
blah <- getmonitor(1, "specdata")
head(data)
getmonitor <- function(id, directory, summarize = FALSE){
if (is.character(id)) id <- as.numeric(id)
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
content <- read.csv(path)
# print(class(content))
if(summarize == TRUE){
print(summary(content))
}
}
getmonitor("3","specdata", TRUE)
getmonitor(100,"specdata", TRUE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
getmonitor(100,"specdata", TRUE)
head(content)
head(data)
getmonitor <- function(id, directory, summarize = FALSE){
if (is.character(id)) id <- as.numeric(id)
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
content <- read.csv(path)
if(summarize == TRUE){
print(summary(content))
}
}
getmonitor(100,"specdata", TRUE)
head(content)
data <- getmonitor(100,"specdata", TRUE)
head(data)
data <- getmonitor(100,"specdata")
head(data)
getmonitor <- function(id, directory, summarize = FALSE){
if (is.character(id)) id <- as.numeric(id)
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
content <- read.csv(path)
if(summarize == TRUE){
print(summary(content))
}
content
}
data <- getmonitor(100,"specdata")
head(data)
getmonitor(100,"specdata")
getmonitor <- function(id, directory, summarize = FALSE){
if (is.character(id)) id <- as.numeric(id)
filename <- paste(sprintf("%03.f",id), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
content <- read.csv(path)
if(summarize == TRUE){
print(summary(content))
}
invisible(content)
}
getmonitor(100,"specdata")
head(content)
data <- getmonitor(100,"specdata")
head(data)
data <- getmonitor(1, "specdata")
head(data)
data <- getmonitor(101, "specdata", TRUE)
head(data)
data <- getmonitor("200", "specdata", TRUE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
read.csv(specdata/001.csv)
afile <- read.csv("specdata/001.csv"")
afile <- read.csv("specdata/001.csv")
head(afile)
summary(afile)
afile <- read.csv("specdata/002.csv")
summary(afile)
afile <- read.csv("specdata/003.csv")
summary(afile)
getwd()
tempdata <- read.csv("specdata/001.csv")
head(tempdata)
tail(tempdata)
summary(tempdata)
colSums(tempdata)
colMeans(tempdata)
str(tempdata)
rstudio::viewData(ozone_subset)
sapply(tempdata,mean)
apply(tempdata,2,mean)
redcol <- subset(tempdata, select=c(sulfate,nitrate))
head(redcol)
nrow(redcol)
apply(redcol,2, function(x) length(which(!is.na(x))))
NArows <- apply(redcol,1,function(x) sum(is.na(z)))
NArows
apply(redcol,1, function(x) length(which(!is.na(x))))
apply(redcol,1, function(x) length(which(is.na(x))))
na_count <- apply(redcol,1, function(x) length(which(is.na(x))))
str(na_count)
subset(na_count, names==0)
subset(na_count, subset=(names ==0))
str(na_count)
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
na_count
redcol[!(na_count > 0)]
redcol[!(na_count > 0),]
length(redcol[!(na_count > 0),])
nrows(redcol[!(na_count > 0),])
nrow(redcol[!(na_count > 0),])
tempdata <- read.csv("specdata/002.csv")
redcol <- subset(tempdata,select = c(sulfate,nitrate))
na_count <- apply(redcol, 1, function(x) sum(is.na(x)))
redcol[!(na_count > 0),]
nrow(redcol[!(na_count > 0),])
na_count
redcol[!(na_count > 0),]
str(redcol)
str(na_count)
numvec <- vector()
numvec <- 1
numvec <- 2
numvec
append(numvec,3)
append(numvec,9)
numvec
append(numvec,3)
numvec
numvec <- append(numvec,3)
numvec
numvec <- append(numvec,9)
numvec
complete <- function(directory, id) {
nobs <- vector()
for(i in id) {
# Get the file
filename <- paste(sprintf("%03.f",i), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
tempdata <- read.csv(path)
# Process the file
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
nobs <- append(nobs, nrow(redcol[!(na_count > 0),]))
}
df <- data.frame(id,nobs)
return(df)
}
complete("specdata", id = 1:2)
complete("specdata", id = 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
complete("specdata", 3)
complete("specdata", c(2,4,8,10,12))
str(complete)
source('~/R_Files/Computing for Data Analysis/complete.R')
complete("specdata", c(2,4,8,10,12))
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
complete <- function(directory, id) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
nobs <- vector()
for(i in id) {
# Convert directory and id to useable filename and path and get the file
filename <- paste(sprintf("%03.f",i), "csv", sep = ".")
path <- paste(directory, filename, sep = "/")
tempdata <- read.csv(path)
# Process the file
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
nobs <- append(nobs, nrow(redcol[!(na_count > 0),]))
}
df <- data.frame(id,nobs)
return(df)
}
complete("specdata", c(2,4,8,10,12))
?cor()
dfrm <- complete("specdata", c(2,4,8,10,12))
cor(dfrm)
head(cor(dfrm))
tempdata <- read.csv(specdata/002.csv)
tempdata <- read.csv("specdata/002.csv")
redcol <- subset(tempdata,select=c(sulfate,nitrate))
head(redcol)
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
dfrm <- redcol[!(na_count > 0),]
head(dfrm)
cor(dfrm)
cor.test(dfrm$sulfate, dfrm$nitrate)
cor(dfrm$sulfate, dfrm$nitrate)
tempdata <- read.csv("specdata/002.csv")
redcol <- subset(tempdata,select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
nobs <- nrow(redcol[!(na_count > 0),])
nobs
comp_obs <- redcol[!(na_count > 0),])
head(redcol)
head(na_count)
comp_obs <- redcol[!(na_count > 0),]
head(comp_obs)
length(comp_obs)
nrow(comp_obs)
cor(comp_obs$sulfate, comp_obs$nitrate)
filenames <- list.files("specdata", pattern="*.csv",full.names = TRUE)
head(filenames)
str(filenames)
for (i in filenames) print(i)
filenames[1]
read.csv(filenames[1])
corr <- function(directory, threshold = 0){
corvec <- vector()  #declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata < read.csv(i)
print(nrow(tempdata))
}
}
corr <- function(directory, threshold = 0){
corvec <- vector()  #declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata < read.csv(i)
print(nrow(tempdata))
}
}
corr(specdata)
corr("specdata")
corr <- function(directory, threshold = 0){
corvec <- vector()  #declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
print(nrow(tempdata))
}
}
corr("specdata")
corr <- function(directory, threshold = 0){
corvec <- vector()        #Declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
#print(nrow(tempdata))
# For each file find the number of complete obs in order to compare with threshold
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
comp_obs <- redcol[!(na_count > 0),]
nobs <- nrow(redcol)
if(nobs > threshold) {
corvec <- append(corvec, cor(comp_obs$sulfate, comp_obs$nitrate))
}
}
return(corvec)
}
cv <- corr("specdata",150)
head(cv)
cr <- corr("specdata",400)
head(cr)
source('~/R_Files/Computing for Data Analysis/corr.R')
cr <- corr("specdata",400)
head(cr)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/corr-test.R")
corr.testscript()
length(cr)
corr <- function(directory, threshold = 0){
corvec <- vector()        #Declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
#print(nrow(tempdata))
# For each file find the number of complete obs in order to compare with threshold
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
comp_obs <- redcol[!(na_count > 0),]
nobs <- nrow(redcol)
if(nobs > threshold) {
print(nobs)
cor_value <- cor(comp_obs$sulfate, comp_obs$nitrate)
corvec <- append(corvec, cor_value)
}
}
return(corvec)
}
cr <- corr("specdata",400)
corr <- function(directory, threshold = 0){
corvec <- vector()        #Declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
#print(nrow(tempdata))
# For each file find the number of complete obs in order to compare with threshold
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
comp_obs <- redcol[!(na_count > 0),]
nobs <- nrow(redcol)
if(nobs > threshold) {
cor_value <- cor(comp_obs$sulfate, comp_obs$nitrate)
corvec <- append(corvec, cor_value)
}
}
return(corvec)
}
corr <- function(directory, threshold = 0){
corvec <- vector()        #Declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
#print(nrow(tempdata))
# For each file find the number of complete obs in order to compare with threshold
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
comp_obs <- redcol[!(na_count > 0),]
nobs <- nrow(redcol)
if(nobs > threshold) {
cor_value <- cor(comp_obs$sulfate, comp_obs$nitrate)
corvec <- append(corvec, cor_value)
}
}
return(corvec)
}
cr <- corr("specdata",40000)
str(cr)
cr
length(cr)
corr <- function(directory, threshold = 0){
corvec <- vector(mode="numeric")        #Declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
#print(nrow(tempdata))
# For each file find the number of complete obs in order to compare with threshold
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
comp_obs <- redcol[!(na_count > 0),]
nobs <- nrow(redcol)
if(nobs > threshold) {
cor_value <- cor(comp_obs$sulfate, comp_obs$nitrate)
corvec <- append(corvec, cor_value)
}
}
return(corvec)
}
cr <- corr("specdata",40000)
length(cr)
str(cr)
file1 <- read.csv("specdata/001.csv")
nrow(file1)
head(file1)
file2 <- read.csv("specdata/002.csv")
nrow(file2)
head(file2)
corr <- function(directory, threshold = 0){
corvec <- vector(mode="numeric")        #Declare vector to hold cor values for each complete set
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for (i in filenames) {
tempdata <- read.csv(i)
#print(nrow(tempdata))
# For each file find the number of complete obs in order to compare with threshold
redcol <- subset(tempdata, select=c(sulfate,nitrate))
na_count <- apply(redcol,1, function(x) sum(is.na(x)))
comp_obs <- redcol[!(na_count > 0),]
nobs <- nrow(comp_obs)
if(nobs > threshold) {
cor_value <- cor(comp_obs$sulfate, comp_obs$nitrate)
corvec <- append(corvec, cor_value)
}
}
return(corvec)
}
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",150)
head(cr)
summary(cr)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/corr-test.R")
corr.testscript()
filenames <- list.files("specdata", pattern = "*.csv", full.names = TRUE)
head(filenames)
str(filenames)
